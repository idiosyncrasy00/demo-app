apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app-demo.fullname" . }}
  labels:
    {{- include "app-demo.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "app-demo.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "app-demo.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      # imagePullSecrets:
      # - name: regcred
      serviceAccountName: {{ include "app-demo.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MY_POD_SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}


# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   labels:
#     app.kubernetes.io/instance: demo-app-argocd
#     app.kubernetes.io/managed-by: Helm
#     app.kubernetes.io/name: app-demo
#     app.kubernetes.io/version: 1.16.0
#     helm.sh/chart: app-demo-0.1.0
#   name: demo-app-argocd-app-demo
#   namespace: demo
# spec:
#   replicas: 4
#   selector:
#     matchLabels:
#       app.kubernetes.io/instance: demo-app-argocd
#       app.kubernetes.io/name: app-demo
#   template:
#     metadata:
#       labels:
#         app.kubernetes.io/instance: demo-app-argocd
#         app.kubernetes.io/name: app-demo
#     spec:
#       containers:
#         - env:
#             - name: MY_NODE_NAME
#               valueFrom:
#                 fieldRef:
#                   fieldPath: spec.nodeName
#             - name: MY_POD_NAME
#               valueFrom:
#                 fieldRef:
#                   fieldPath: metadata.name
#             - name: MY_POD_NAMESPACE
#               valueFrom:
#                 fieldRef:
#                   fieldPath: metadata.namespace
#             - name: MY_POD_IP
#               valueFrom:
#                 fieldRef:
#                   fieldPath: status.podIP
#             - name: MY_POD_SERVICE_ACCOUNT
#               valueFrom:
#                 fieldRef:
#                   fieldPath: spec.serviceAccountName
#           image: idiosyncrasy00/demo-app:v1.21
#           imagePullPolicy: Always
#           livenessProbe:
#             httpGet:
#               path: /
#               port: http
#           name: app-demo
#           ports:
#             - containerPort: 8080
#               name: http
#               protocol: TCP
#           readinessProbe:
#             httpGet:
#               path: /
#               port: http
#           resources: {}
#           securityContext: {}
#       securityContext: {}
#       serviceAccountName: demo-app-argocd-app-demo
#       syncPolicy:
#         syncOptions:
#         - CreateNamespace=true
#         - PruneLast=true

#         automated:
#           selfHeal: true
#           prune: true

